[
  {
    "instruction": "## 任务描述 ##\n根据以下价格政策信息和OCR文本，提取并计算资源价格。\n\n\n\n## 可选条件结构 ##\n以下是所有可用的条件结构，你必须从中选择一个作为conditions字段的值：\n请从以下选项中选择一个完整的条件结构作为conditions字段的值：\n\n选项1:\n{\n  \"name\": \"门市价\",\n  \"children\": null\n}\n\n选项2:\n{\n  \"name\": \"协议成团价\",\n  \"children\": null\n}\n\n选项3:\n{\n  \"name\": \"协议不成团价\",\n  \"children\": null\n}\n\n选项4:\n{\n  \"name\": \"非协议成团价\",\n  \"children\": null\n}\n\n选项5:\n{\n  \"name\": \"非协议不成团价\",\n  \"children\": null\n}\n\n选项6:\n{\n  \"name\": \"老年团队价\",\n  \"children\": null\n}\n\n选项7:\n{\n  \"name\": \"学生团队价\",\n  \"children\": null\n}\n\n选项8:\n{\n  \"name\": \"中远程及新增市场价格\",\n  \"children\": null\n}\n\n选项9:\n{\n  \"name\": \"景酒打包价\",\n  \"children\": null\n}\n\n选项10:\n{\n  \"name\": \"旅投员工价\",\n  \"children\": null\n}\n\n选项11:\n{\n  \"name\": \"住酒店免门票\",\n  \"children\": null\n}\n\n**重要说明**：\n- 必须完整复制上述选项之一作为conditions字段的值\n- 不允许修改或组合不同选项\n- children字段如果为数组，请选择到最后一层（children为null的那一层）\n- 对于多层结构，请根据OCR文本内容选择最具体的条件路径\n\n\n## 输出格式 ##\n请分析OCR文本中与产品\"七里扬帆门票_产品\"相关的资源信息，匹配对应的价格政策，并返回JSON格式的结果：\n\n{\n    \"resources\": [\n        {\n            \"resource_name\": \"资源名称\",\n            \"start_time\": \"开始时间\",\n            \"end_time\": \"结束时间\", \n            \"unit_count\": \"单位数量（字符串格式）\",\n            \"conditions\": {\n                // 必须从上面\"可选条件结构\"中完整复制一个选项\n                // 格式示例: {\"name\": \"资源名\", \"children\": [{\"name\": \"具体条件\", \"children\": null}]}\n            },\n            \"notes\": \"备注信息\",\n            \"unit\": \"单位\",\n            \"usage_info\": \"使用信息\",\n            \"unit_price\": 单价,\n            \"total_price\": 总价\n        }\n    ],\n    \"product_total_amount\": 产品总金额,\n    \"product_total_unit_amount\": 产品总单位数量（数字）\n}\n\n## 处理要求 ##\n1. 只返回与产品\"七里扬帆门票_产品\"相关的资源\n2. **【关键】resource_name必须严格来源于价格政策条件中的\"产品类型\"，禁止从OCR文本推断**\n**\n3. **【必须】conditions字段只能从上面\"可选条件结构\"部分提供的选项中选择，完整复制其中一个，绝对不允许自行构造**\n4. 根据价格条件准确匹配对应的价格\n5. 时间输出格式：YYYYMMDD， 如果OCR文本中没有年份，则使用2025年\n6. 考虑所有限制条件（如人数、年龄、证件等）\n7. 计算准确的单价和总价\n8. **【价格选择指导】根据客户类型选择合适的价格：**\n   - 协议客户：优先选择协议成团价、协议不成团价等协议相关价格\n   - 非协议客户：选择非协议成团或不成团价格，不考虑协议类价格\n\n## 重要：资源名称匹配规范 ##\n**【严格约束】resource_name必须严格按照价格政策条件中的资源结构填写，需要特别处理多枚举值情况。**\n\n**关键原则：**\n1. **对于有多个枚举值的资源（如大慈岩索道_产品包含：大慈岩索道上行、大慈岩索道下行、索道上下行），resource_name应为基础资源名（如\"大慈岩索道\"），而不是具体的枚举值**\n2. **对于多产品类型资源，resource_name应为基础资源名，而不是具体的产品类型**\n3. **对于单一资源，resource_name使用完整的\"产品类型\"名称**\n4. **绝对禁止从OCR文本中的地名、景点名推断resource_name**\n\n**多枚举值识别标准：**\n- 如果一个产品有多个并列的资源选项（如上行、下行、上下行），则认为是多枚举值资源\n- 多枚举值的resource_name应去掉具体枚举部分，保留基础名称\n\n**正确示例：**\n- 价格政策包含: 大慈岩索道上行、大慈岩索道下行、索道上下行 → resource_name: \"大慈岩索道\" ✓\n- 价格政策包含: 玉泉寺门票(只有一种) → resource_name: \"玉泉寺门票\" ✓\n- 价格政策包含: 七里扬帆门票(只有一种) → resource_name: \"七里扬帆门票\" ✓\n\n**错误示例（禁止）：**\n- 多枚举值情况下写成具体枚举值: \"大慈岩索道下行\" (禁止) \n- 从OCR文本推断任何不在价格政策中的资源名称 (禁止)\n\n**验证方法：检查价格政策中是否存在该资源的多个枚举值，如果是则使用基础名称**\n\n\n## 字段规范 ##\n6. 单位输出的枚举范围：人次、桌数、辆、无单位、房，晚\n7. **【关键】conditions字段必须从上面\"可选条件结构\"中完整复制一个选项，不允许自行创建或修改任何部分**\n8. unit_count根据单位类型提取：人次→人数，辆→车辆数，无单位→null，房晚→\"房,晚\"格式\n9. unit_count必须是字符串格式，即使是数字也要用引号包围\n10. product_total_unit_amount必须是数字格式，不要包含单位名称\n\n## 输出要求 ##\n11. 只返回JSON格式的结果，不要包含其他文字说明\n12. **输出前必须验证：resource_name必须与MongoDB数据结构保持一致**",
    "input": "## 产品信息 ##\n产品名称: 七里扬帆门票_产品\n\n## 价格政策条件 ##\n产品名称: 七里扬帆门票_产品\n产品类型: 七里扬帆门票\n  条件: 门市价 (价格: 80 人次)\n  条件: 协议成团价 (价格: 50 人次) [条件: 团队人数 ≥ 10人]\n  条件: 协议不成团价 (价格: 50 人次)\n  条件: 非协议成团价 (价格: 64 人次) [条件: 证件 需要 导游证/任务单/计划书]\n  条件: 非协议不成团价 (价格: 72 人次)\n  条件: 老年团队价 (价格: 40 人次) [条件: 年龄占比 ≥ 70%] [条件: 年龄 ≥ 55岁]\n  条件: 学生团队价 (价格: 40 人次) [条件: 学生占比 ≥ 80%]\n  条件: 中远程及新增市场价格 (价格: 30 人次) [条件: 地区 属于 江浙沪以外] [条件: 证件占比 ≥ 80%]\n  条件: 景酒打包价 (价格: 50 人次) [条件: 住宿 住 旅投合作酒店]\n  条件: 旅投员工价 (价格: 50 人次) [条件: 身份 是 旅投员工]\n  条件: 住酒店免门票 (价格: 0 人次) [条件: 住宿 住 酒店] [条件: 有效期 在 2025年1月1日-3月31日]\n\n## OCR文本 ##\n金华和誉\n\n12月30日 七里扬帆\n\n人数：10人\n\n导游信息：大漂亮13646228790\n\n## 客户信息 ##\n- 客户类型: 协议客户（优先考虑协议成团价相关表述）\n- 身份证信息: 无",
    "output": "{\n  \"resources\": [\n    {\n      \"resource_name\": \"七里扬帆门票\",\n      \"start_time\": \"20251230\",\n      \"end_time\": \"20251230\",\n      \"unit_count\": \"10\",\n      \"conditions\": {\n        \"name\": \"协议成团价\",\n        \"children\": null\n      },\n      \"notes\": \"团队人数≥10人\",\n      \"unit\": \"人次\",\n      \"usage_info\": \"团队人数≥10人\",\n      \"unit_price\": 50,\n      \"total_price\": 500\n    }\n  ],\n  \"product_total_amount\": 500,\n  \"product_total_unit_amount\": 10\n}"
  },
  {
    "instruction": "## 任务描述 ##\n根据以下价格政策信息和OCR文本，提取并计算资源价格。\n\n\n## 联票拆分要求 ##\n**重要**：\"大慈岩门票_灵栖洞门票_灵栖洞手划船_联票\"是联票产品，必须将其拆分为独立的资源组件，每个组件都要单独列出：\n\n1. 从价格政策条件中识别联票包含的所有独立资源组件\n2. 为每个组件创建独立的resource对象\n3. 每个组件的resource_name按联票名称拆分确定\n4. 每个组件使用相同的时间和数量信息，但价格要根据各自的单价计算\n5. 确保所有组件的总价加起来等于联票总价\n\n**联票中conditions格式要求**：\n- 每个组件的resource_name使用具体的资源名称\n- conditions结构必须与价格政策树状结构完全一致\n- 不要在conditions中添加额外的价格条件层级\n## 可选条件结构 ##\n以下是所有可用的条件结构，你必须从中选择一个作为conditions字段的值：\n无可用条件结构\n\n## 输出格式 ##\n请分析OCR文本中与产品\"大慈岩门票_灵栖洞门票_灵栖洞手划船_联票\"相关的资源信息，匹配对应的价格政策，并返回JSON格式的结果：\n\n{\n    \"resources\": [\n        {\n            \"resource_name\": \"资源名称\",\n            \"start_time\": \"开始时间\",\n            \"end_time\": \"结束时间\", \n            \"unit_count\": \"单位数量（字符串格式）\",\n            \"conditions\": {\n                // 必须从上面\"可选条件结构\"中完整复制一个选项\n                // 格式示例: {\"name\": \"资源名\", \"children\": [{\"name\": \"具体条件\", \"children\": null}]}\n            },\n            \"notes\": \"备注信息\",\n            \"unit\": \"单位\",\n            \"usage_info\": \"使用信息\",\n            \"unit_price\": 单价,\n            \"total_price\": 总价\n        }\n    ],\n    \"product_total_amount\": 产品总金额,\n    \"product_total_unit_amount\": 产品总单位数量（数字）\n}\n\n## 处理要求 ##\n1. 如果是联票，必须拆分为独立的资源组件，每个组件都要单独列出\n2. **【关键】resource_name必须严格来源于价格政策条件中的\"产品类型\"，禁止从OCR文本推断**\n2a. **【联票conditions要求】**每个组件的conditions结构必须与MongoDB树状结构完全一致**\n3. **【必须】conditions字段只能从上面\"可选条件结构\"部分提供的选项中选择，完整复制其中一个，绝对不允许自行构造**\n4. 根据价格条件准确匹配对应的价格\n5. 时间输出格式：YYYYMMDD， 如果OCR文本中没有年份，则使用2025年\n6. 考虑所有限制条件（如人数、年龄、证件等）\n7. 计算准确的单价和总价\n8. **【价格选择指导】根据客户类型选择合适的价格：**\n   - 协议客户：优先选择协议成团价、协议不成团价等协议相关价格\n   - 非协议客户：选择非协议成团或不成团价格，不考虑协议类价格\n\n## 重要：资源名称匹配规范 ##\n**【严格约束】resource_name必须严格按照价格政策条件中的资源结构填写，需要特别处理多枚举值情况。**\n\n**关键原则：**\n1. **对于有多个枚举值的资源（如大慈岩索道_产品包含：大慈岩索道上行、大慈岩索道下行、索道上下行），resource_name应为基础资源名（如\"大慈岩索道\"），而不是具体的枚举值**\n2. **对于多产品类型资源，resource_name应为基础资源名，而不是具体的产品类型**\n3. **对于单一资源，resource_name使用完整的\"产品类型\"名称**\n4. **绝对禁止从OCR文本中的地名、景点名推断resource_name**\n\n**多枚举值识别标准：**\n- 如果一个产品有多个并列的资源选项（如上行、下行、上下行），则认为是多枚举值资源\n- 多枚举值的resource_name应去掉具体枚举部分，保留基础名称\n\n**正确示例：**\n- 价格政策包含: 大慈岩索道上行、大慈岩索道下行、索道上下行 → resource_name: \"大慈岩索道\" ✓\n- 价格政策包含: 玉泉寺门票(只有一种) → resource_name: \"玉泉寺门票\" ✓\n- 价格政策包含: 七里扬帆门票(只有一种) → resource_name: \"七里扬帆门票\" ✓\n\n**错误示例（禁止）：**\n- 多枚举值情况下写成具体枚举值: \"大慈岩索道下行\" (禁止) \n- 从OCR文本推断任何不在价格政策中的资源名称 (禁止)\n\n**验证方法：检查价格政策中是否存在该资源的多个枚举值，如果是则使用基础名称**\n\n\n## 字段规范 ##\n6. 单位输出的枚举范围：人次、桌数、辆、无单位、房，晚\n7. **【关键】conditions字段必须从上面\"可选条件结构\"中完整复制一个选项，不允许自行创建或修改任何部分**\n8. unit_count根据单位类型提取：人次→人数，辆→车辆数，无单位→null，房晚→\"房,晚\"格式\n9. unit_count必须是字符串格式，即使是数字也要用引号包围\n10. product_total_unit_amount必须是数字格式，不要包含单位名称\n\n## 输出要求 ##\n11. 只返回JSON格式的结果，不要包含其他文字说明\n12. **输出前必须验证：resource_name必须与MongoDB数据结构保持一致**",
    "input": "## 产品信息 ##\n产品名称: 大慈岩门票_灵栖洞门票_灵栖洞手划船_联票\n\n## 价格政策条件 ##\n产品名称: 大慈岩门票_灵栖洞门票_灵栖洞手划船_联票\n产品类型: 大慈岩门票 (价格: 70 人次)\n产品类型: 灵栖洞手划船 (价格: 15 人次)\n产品类型: 灵栖洞门票 (价格: 20 人次)\n\n## OCR文本 ##\n嘉兴市米兰国际旅行社股份有限公司\n\n12月30日 灵栖洞、大慈岩\n\n人数：10人\n\n导游信息：李美美13646228790\n\n## 客户信息 ##\n- 客户类型: 协议客户（优先考虑协议成团价相关表述）\n- 身份证信息: 无",
    "output": "{\n  \"resources\": [\n    {\n      \"resource_name\": \"大慈岩门票\",\n      \"start_time\": \"20251230\",\n      \"end_time\": \"20251230\",\n      \"unit_count\": \"10\",\n      \"conditions\": null,\n      \"notes\": \"\",\n      \"unit\": \"人次\",\n      \"usage_info\": \"\",\n      \"unit_price\": 70,\n      \"total_price\": 700\n    },\n    {\n      \"resource_name\": \"灵栖洞门票\",\n      \"start_time\": \"20251230\",\n      \"end_time\": \"20251230\",\n      \"unit_count\": \"10\",\n      \"conditions\": null,\n      \"notes\": \"\",\n      \"unit\": \"人次\",\n      \"usage_info\": \"\",\n      \"unit_price\": 20,\n      \"total_price\": 200\n    },\n    {\n      \"resource_name\": \"灵栖洞手划船\",\n      \"start_time\": \"20251230\",\n      \"end_time\": \"20251230\",\n      \"unit_count\": \"10\",\n      \"conditions\": null,\n      \"notes\": \"\",\n      \"unit\": \"人次\",\n      \"usage_info\": \"\",\n      \"unit_price\": 15,\n      \"total_price\": 150\n    }\n  ],\n  \"product_total_amount\": 1050,\n  \"product_total_unit_amount\": 30\n}"
  },
  {
    "instruction": "## 任务描述 ##\n根据以下价格政策信息和OCR文本，提取并计算资源价格。\n\n\n## 联票拆分要求 ##\n**重要**：\"七里扬帆门票_七里扬帆游船_联票\"是联票产品，必须将其拆分为独立的资源组件，每个组件都要单独列出：\n\n1. 从价格政策条件中识别联票包含的所有独立资源组件\n2. 为每个组件创建独立的resource对象\n3. 每个组件的resource_name按联票名称拆分确定\n4. 每个组件使用相同的时间和数量信息，但价格要根据各自的单价计算\n5. 确保所有组件的总价加起来等于联票总价\n\n**联票中conditions格式要求**：\n- 每个组件的resource_name使用具体的资源名称\n- conditions结构必须与价格政策树状结构完全一致\n- 不要在conditions中添加额外的价格条件层级\n## 可选条件结构 ##\n以下是所有可用的条件结构，你必须从中选择一个作为conditions字段的值：\n无可用条件结构\n\n## 输出格式 ##\n请分析OCR文本中与产品\"七里扬帆门票_七里扬帆游船_联票\"相关的资源信息，匹配对应的价格政策，并返回JSON格式的结果：\n\n{\n    \"resources\": [\n        {\n            \"resource_name\": \"资源名称\",\n            \"start_time\": \"开始时间\",\n            \"end_time\": \"结束时间\", \n            \"unit_count\": \"单位数量（字符串格式）\",\n            \"conditions\": {\n                // 必须从上面\"可选条件结构\"中完整复制一个选项\n                // 格式示例: {\"name\": \"资源名\", \"children\": [{\"name\": \"具体条件\", \"children\": null}]}\n            },\n            \"notes\": \"备注信息\",\n            \"unit\": \"单位\",\n            \"usage_info\": \"使用信息\",\n            \"unit_price\": 单价,\n            \"total_price\": 总价\n        }\n    ],\n    \"product_total_amount\": 产品总金额,\n    \"product_total_unit_amount\": 产品总单位数量（数字）\n}\n\n## 处理要求 ##\n1. 如果是联票，必须拆分为独立的资源组件，每个组件都要单独列出\n2. **【关键】resource_name必须严格来源于价格政策条件中的\"产品类型\"，禁止从OCR文本推断**\n2a. **【联票conditions要求】**每个组件的conditions结构必须与MongoDB树状结构完全一致**\n3. **【必须】conditions字段只能从上面\"可选条件结构\"部分提供的选项中选择，完整复制其中一个，绝对不允许自行构造**\n4. 根据价格条件准确匹配对应的价格\n5. 时间输出格式：YYYYMMDD， 如果OCR文本中没有年份，则使用2025年\n6. 考虑所有限制条件（如人数、年龄、证件等）\n7. 计算准确的单价和总价\n\n## 重要：资源名称匹配规范 ##\n**【严格约束】resource_name必须严格按照价格政策条件中的资源结构填写，需要特别处理多枚举值情况。**\n\n**关键原则：**\n1. **对于有多个枚举值的资源（如大慈岩索道_产品包含：大慈岩索道上行、大慈岩索道下行、索道上下行），resource_name应为基础资源名（如\"大慈岩索道\"），而不是具体的枚举值**\n2. **对于多产品类型资源，resource_name应为基础资源名，而不是具体的产品类型**\n3. **对于单一资源，resource_name使用完整的\"产品类型\"名称**\n4. **绝对禁止从OCR文本中的地名、景点名推断resource_name**\n\n**多枚举值识别标准：**\n- 如果一个产品有多个并列的资源选项（如上行、下行、上下行），则认为是多枚举值资源\n- 多枚举值的resource_name应去掉具体枚举部分，保留基础名称\n\n**正确示例：**\n- 价格政策包含: 大慈岩索道上行、大慈岩索道下行、索道上下行 → resource_name: \"大慈岩索道\" ✓\n- 价格政策包含: 玉泉寺门票(只有一种) → resource_name: \"玉泉寺门票\" ✓\n- 价格政策包含: 七里扬帆门票(只有一种) → resource_name: \"七里扬帆门票\" ✓\n\n**错误示例（禁止）：**\n- 多枚举值情况下写成具体枚举值: \"大慈岩索道下行\" (禁止) \n- 从OCR文本推断任何不在价格政策中的资源名称 (禁止)\n\n**验证方法：检查价格政策中是否存在该资源的多个枚举值，如果是则使用基础名称**\n\n\n## 字段规范 ##\n6. 单位输出的枚举范围：人次、桌数、辆、无单位、房，晚\n7. **【关键】conditions字段必须从上面\"可选条件结构\"中完整复制一个选项，不允许自行创建或修改任何部分**\n8. unit_count根据单位类型提取：人次→人数，辆→车辆数，无单位→null，房晚→\"房,晚\"格式\n9. unit_count必须是字符串格式，即使是数字也要用引号包围\n10. product_total_unit_amount必须是数字格式，不要包含单位名称\n\n## 输出要求 ##\n11. 只返回JSON格式的结果，不要包含其他文字说明\n12. **输出前必须验证：resource_name必须与MongoDB数据结构保持一致**",
    "input": "## 产品信息 ##\n产品名称: 七里扬帆门票_七里扬帆游船_联票\n\n## 价格政策条件 ##\n产品名称: 七里扬帆门票_七里扬帆游船_联票\n产品类型: 七里扬帆游船 (价格: 25 人次)\n产品类型: 七里扬帆门票 (价格: 25 人次)\n\n## OCR文本 ##\n金华和誉\n\n12月30日 七里扬帆\n\n人数：10人\n\n导游信息：大漂亮13646228790\n\n## 客户信息 ##\n- 客户名称: 金华和誉旅游有限公司\n- 身份证信息: 无",
    "output": "{\n  \"resources\": [\n    {\n      \"resource_name\": \"七里扬帆门票\",\n      \"start_time\": \"20251230\",\n      \"end_time\": \"20251230\",\n      \"unit_count\": \"10\",\n      \"conditions\": null,\n      \"notes\": \"\",\n      \"unit\": \"人次\",\n      \"usage_info\": \"\",\n      \"unit_price\": 25,\n      \"total_price\": 250\n    },\n    {\n      \"resource_name\": \"七里扬帆游船\",\n      \"start_time\": \"20251230\",\n      \"end_time\": \"20251230\",\n      \"unit_count\": \"10\",\n      \"conditions\": null,\n      \"notes\": \"\",\n      \"unit\": \"人次\",\n      \"usage_info\": \"\",\n      \"unit_price\": 25,\n      \"total_price\": 250\n    }\n  ],\n  \"product_total_amount\": 500,\n  \"product_total_unit_amount\": 20\n}"
  },
  {
    "instruction": "## 任务描述 ##\n根据以下价格政策信息和OCR文本，提取并计算资源价格。\n\n\n\n## 可选条件结构 ##\n以下是所有可用的条件结构，你必须从中选择一个作为conditions字段的值：\n请从以下选项中选择一个完整的条件结构作为conditions字段的值：\n\n选项1:\n{\n  \"name\": \"门市价\",\n  \"children\": null\n}\n\n选项2:\n{\n  \"name\": \"协议成团价\",\n  \"children\": null\n}\n\n选项3:\n{\n  \"name\": \"协议不成团价\",\n  \"children\": null\n}\n\n选项4:\n{\n  \"name\": \"非协议成团价\",\n  \"children\": null\n}\n\n选项5:\n{\n  \"name\": \"非协议不成团价\",\n  \"children\": null\n}\n\n选项6:\n{\n  \"name\": \"老年团队价\",\n  \"children\": null\n}\n\n选项7:\n{\n  \"name\": \"学生团队价\",\n  \"children\": null\n}\n\n选项8:\n{\n  \"name\": \"中远程及新增市场价格\",\n  \"children\": null\n}\n\n选项9:\n{\n  \"name\": \"景酒打包价\",\n  \"children\": null\n}\n\n选项10:\n{\n  \"name\": \"旅投员工价\",\n  \"children\": null\n}\n\n**重要说明**：\n- 必须完整复制上述选项之一作为conditions字段的值\n- 不允许修改或组合不同选项\n- children字段如果为数组，请选择到最后一层（children为null的那一层）\n- 对于多层结构，请根据OCR文本内容选择最具体的条件路径\n\n\n## 输出格式 ##\n请分析OCR文本中与产品\"大慈岩门票_产品\"相关的资源信息，匹配对应的价格政策，并返回JSON格式的结果：\n\n{\n    \"resources\": [\n        {\n            \"resource_name\": \"资源名称\",\n            \"start_time\": \"开始时间\",\n            \"end_time\": \"结束时间\", \n            \"unit_count\": \"单位数量（字符串格式）\",\n            \"conditions\": {\n                // 必须从上面\"可选条件结构\"中完整复制一个选项\n                // 格式示例: {\"name\": \"资源名\", \"children\": [{\"name\": \"具体条件\", \"children\": null}]}\n            },\n            \"notes\": \"备注信息\",\n            \"unit\": \"单位\",\n            \"usage_info\": \"使用信息\",\n            \"unit_price\": 单价,\n            \"total_price\": 总价\n        }\n    ],\n    \"product_total_amount\": 产品总金额,\n    \"product_total_unit_amount\": 产品总单位数量（数字）\n}\n\n## 处理要求 ##\n1. 只返回与产品\"大慈岩门票_产品\"相关的资源\n2. **【关键】resource_name必须严格来源于价格政策条件中的\"产品类型\"，禁止从OCR文本推断**\n**\n3. **【必须】conditions字段只能从上面\"可选条件结构\"部分提供的选项中选择，完整复制其中一个，绝对不允许自行构造**\n4. 根据价格条件准确匹配对应的价格\n5. 时间输出格式：YYYYMMDD， 如果OCR文本中没有年份，则使用2025年\n6. 考虑所有限制条件（如人数、年龄、证件等）\n7. 计算准确的单价和总价\n8. **【价格选择指导】根据客户类型选择合适的价格：**\n   - 协议客户：优先选择协议成团价、协议不成团价等协议相关价格\n   - 非协议客户：选择非协议成团或不成团价格，不考虑协议类价格\n\n## 重要：资源名称匹配规范 ##\n**【严格约束】resource_name必须严格按照价格政策条件中的资源结构填写，需要特别处理多枚举值情况。**\n\n**关键原则：**\n1. **对于有多个枚举值的资源（如大慈岩索道_产品包含：大慈岩索道上行、大慈岩索道下行、索道上下行），resource_name应为基础资源名（如\"大慈岩索道\"），而不是具体的枚举值**\n2. **对于多产品类型资源，resource_name应为基础资源名，而不是具体的产品类型**\n3. **对于单一资源，resource_name使用完整的\"产品类型\"名称**\n4. **绝对禁止从OCR文本中的地名、景点名推断resource_name**\n\n**多枚举值识别标准：**\n- 如果一个产品有多个并列的资源选项（如上行、下行、上下行），则认为是多枚举值资源\n- 多枚举值的resource_name应去掉具体枚举部分，保留基础名称\n\n**正确示例：**\n- 价格政策包含: 大慈岩索道上行、大慈岩索道下行、索道上下行 → resource_name: \"大慈岩索道\" ✓\n- 价格政策包含: 玉泉寺门票(只有一种) → resource_name: \"玉泉寺门票\" ✓\n- 价格政策包含: 七里扬帆门票(只有一种) → resource_name: \"七里扬帆门票\" ✓\n\n**错误示例（禁止）：**\n- 多枚举值情况下写成具体枚举值: \"大慈岩索道下行\" (禁止) \n- 从OCR文本推断任何不在价格政策中的资源名称 (禁止)\n\n**验证方法：检查价格政策中是否存在该资源的多个枚举值，如果是则使用基础名称**\n\n\n## 字段规范 ##\n6. 单位输出的枚举范围：人次、桌数、辆、无单位、房，晚\n7. **【关键】conditions字段必须从上面\"可选条件结构\"中完整复制一个选项，不允许自行创建或修改任何部分**\n8. unit_count根据单位类型提取：人次→人数，辆→车辆数，无单位→null，房晚→\"房,晚\"格式\n9. unit_count必须是字符串格式，即使是数字也要用引号包围\n10. product_total_unit_amount必须是数字格式，不要包含单位名称\n\n## 输出要求 ##\n11. 只返回JSON格式的结果，不要包含其他文字说明\n12. **输出前必须验证：resource_name必须与MongoDB数据结构保持一致**",
    "input": "## 产品信息 ##\n产品名称: 大慈岩门票_产品\n\n## 价格政策条件 ##\n产品名称: 大慈岩门票_产品\n产品类型: 大慈岩门票\n  条件: 门市价 (价格: 80 人次)\n  条件: 协议成团价 (价格: 50 人次) [条件: 团队人数 ≥ 10人]\n  条件: 协议不成团价 (价格: 50 人次)\n  条件: 非协议成团价 (价格: 64 人次) [条件: 证件 需要 导游证/任务单/计划书]\n  条件: 非协议不成团价 (价格: 72 人次)\n  条件: 老年团队价 (价格: 40 人次) [条件: 年龄占比 ≥ 70%] [条件: 年龄 ≥ 55岁]\n  条件: 学生团队价 (价格: 40 人次) [条件: 学生占比 ≥ 80%]\n  条件: 中远程及新增市场价格 (价格: 30 人次) [条件: 地区 属于 江浙沪以外] [条件: 证件占比 ≥ 80%]\n  条件: 景酒打包价 (价格: 50 人次) [条件: 住宿 住 旅投合作酒店]\n  条件: 旅投员工价 (价格: 50 人次) [条件: 身份 是 旅投员工]\n\n## OCR文本 ##\n浙江吉程\n\n12.30日 大慈岩、灵栖洞\n\n人数：10人\n\n导游信息：王的13646228790\n\n## 客户信息 ##\n- 客户类型: 协议客户（优先考虑协议成团价相关表述）\n- 身份证信息: 无",
    "output": "{\n  \"resources\": [\n    {\n      \"resource_name\": \"大慈岩门票\",\n      \"start_time\": \"20251230\",\n      \"end_time\": \"20251230\",\n      \"unit_count\": \"10\",\n      \"conditions\": {\n        \"name\": \"协议成团价\",\n        \"children\": null\n      },\n      \"notes\": \"团队人数≥10人\",\n      \"unit\": \"人次\",\n      \"usage_info\": \"团队人数≥10人\",\n      \"unit_price\": 50,\n      \"total_price\": 500\n    }\n  ],\n  \"product_total_amount\": 500,\n  \"product_total_unit_amount\": 10\n}"
  }
]